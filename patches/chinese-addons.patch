diff --git a/CMakeLists.txt b/CMakeLists.txt
index 433a71d..7efcd6b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -65,6 +65,8 @@ endif()
 find_package(Boost 1.61 REQUIRED COMPONENTS iostreams)
 find_package(LibIMEPinyin 1.1.7 REQUIRED)
 find_package(LibIMETable 1.1.4 REQUIRED)
+pkg_check_modules(ZSTD REQUIRED IMPORTED_TARGET "libzstd")
+set(LIBIME_INSTALL_PKGDATADIR "../libime")
 
 if (ENABLE_CLOUDPINYIN)
     pkg_check_modules(Curl REQUIRED IMPORTED_TARGET "libcurl")
diff --git a/im/pinyin/pinyin.h b/im/pinyin/pinyin.h
index b7971bf..0e92bbd 100644
--- a/im/pinyin/pinyin.h
+++ b/im/pinyin/pinyin.h
@@ -152,7 +152,7 @@ FCITX_CONFIGURATION(
     Option<bool> preeditCursorPositionAtBeginning{
         this, "PreeditCursorPositionAtBeginning",
         _("Fix embedded preedit cursor at the beginning of the preedit"),
-        !isAndroid()};
+        false};
     Option<bool> showActualPinyinInPreedit{
         this, "PinyinInPreedit", _("Show complete pinyin in preedit"), false};
     Option<bool> predictionEnabled{this, "Prediction", _("Enable Prediction"),
@@ -173,13 +173,13 @@ FCITX_CONFIGURATION(
         this,
         "PrevPage",
         _("Previous Page"),
-        {Key(FcitxKey_minus), Key(FcitxKey_Up), Key(FcitxKey_KP_Up)},
+        {Key(FcitxKey_minus), Key(FcitxKey_Up), Key(FcitxKey_KP_Up), Key(FcitxKey_Page_Up)},
         KeyListConstrain({KeyConstrainFlag::AllowModifierLess})};
     KeyListOption nextPage{
         this,
         "NextPage",
         _("Next Page"),
-        {Key(FcitxKey_equal), Key(FcitxKey_Down), Key(FcitxKey_KP_Down)},
+        {Key(FcitxKey_equal), Key(FcitxKey_Down), Key(FcitxKey_KP_Down), Key(FcitxKey_Page_Down)},
         KeyListConstrain({KeyConstrainFlag::AllowModifierLess})};
     KeyListOption prevCandidate{
         this,
diff --git a/im/table/ime.h b/im/table/ime.h
index d06a0a2..9175d4f 100644
--- a/im/table/ime.h
+++ b/im/table/ime.h
@@ -118,7 +118,7 @@ FCITX_CONFIGURATION(
     Option<bool> preeditCursorPositionAtBeginning{
         this, "PreeditCursorPositionAtBeginning",
         _("Fix embedded preedit cursor at the beginning of the preedit"),
-        !isAndroid()};
+        false};
     Option<Key, KeyConstrain> quickphrase{
         this,
         "QuickPhraseKey",
