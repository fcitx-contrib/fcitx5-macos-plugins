name: ci

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: macos-13
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, arm64]
        include:
          - { arch: x86_64, homebrew_prefix: /usr/local }
          - { arch: arm64, homebrew_prefix: /opt/homebrew }

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies (x86)
        run: |
          brew install \
            fmt \
            extra-cmake-modules \
            json-c \
            ninja

      - name: Setup arm homebrew
        if: ${{ matrix.arch == 'arm64' }}
        uses: fcitx-contrib/macos-cross@master

      - name: Install dependencies (arm)
        if: ${{ matrix.arch == 'arm64' }}
        run: |
          brew install \
            extra-cmake-modules \
            ninja
          arm-brew-install \
            fmt \
            json-c \
            gettext \
            openssl@3 \
            libevent
          wget https://github.com/fcitx-contrib/fcitx5-macos-prebuilder/releases/download/latest/local-x86_64.tar.bz2
          tar xjvf local-x86_64.tar.bz2 -C /usr/local --strip-components=1 # need marisa-build
          cp -f /usr/local/bin/msgfmt /opt/homebrew/bin

      - name: Download prebuilt and Fcitx5.app
        run: |
          wget https://github.com/fcitx-contrib/fcitx5-macos-prebuilder/releases/download/latest/local-${{ matrix.arch }}.tar.bz2
          wget https://github.com/fcitx-contrib/fcitx5-macos/releases/download/latest/Fcitx5-${{ matrix.arch }}.dmg

      - name: Extract prebuilt and Fcitx5.app
        run: |
          tar xjvf local-${{ matrix.arch }}.tar.bz2 -C ${{ matrix.homebrew_prefix }} --strip-components=1
          hdiutil attach Fcitx5-${{ matrix.arch }}.dmg
          sudo cp -r /Volumes/Fcitx5/{Fcitx5.app,"Input Methods"}

      - name: Build all
        run: ./all.sh ${{ matrix.arch }}

      - name: Upload artifact
        if: ${{ github.ref != 'refs/heads/master' }}
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ matrix.arch }}
          path: |
            build/*.tar.bz2

      - name: Release
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: latest
          prerelease: true
          title: "Nightly Build"
          files: |
            build/*.tar.bz2
